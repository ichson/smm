module.exports = class EmbedBuilder {

    constructor() {
        this.embed = {};
    };

    setTitle(title) {
        this.embed.title = title;

        return this;
    };

    setDescription(description) {
        this.embed.description = description;

        return this;
    };

    setColor(color) {
        if (typeof color === 'string') {
            color = parseInt(color.replace('#', ''), 16);
        } else if (Array.isArray(color)) {
            color = (color[0] << 16) + (color[1] << 8) + color[2];
        }

        this.embed.color = color;

        return this;
    };

    addField(name, value, inline) {
        if(!this.embed.fields) this.embed.fields = [];
        this.embed.fields.push({
            name: name,
            value: value,
            inline: inline
        });

        return this;
    }

    setImage(image) {
        this.embed.image = {};
        this.embed.image.url = image;

        return this;
    };

    setThumbnail(thumbnail) {
        this.embed.thumbnail = {};
        this.embed.thumbnail.url = thumbnail;

        return this;
    };

    setURL(url) {
        this.embed.url = url;

        return this;
    };

    setFooter(footer, footerURL) {
        this.embed.footer = {};
        this.embed.footer.text = footer;
        this.embed.footer.icon_url = footerURL;

        return this;
    };

    setTimestamp(date) {
        if(date) {
            this.embed.timestamp = date;
        } else {
            this.embed.timestamp = new Date();
        };

        return this;
    };

    setAuthor(author, authorImg, authorUrl) {
        this.embed.author = {};
        this.embed.author.name = author;
        this.embed.author.icon_url = authorImg;
        this.embed.author.url = authorUrl;
        
        return this;
    };

    toJSON() {
        return this.embed;
    };

};